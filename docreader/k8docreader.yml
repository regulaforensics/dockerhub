kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: regula
  name: regula-docreader
  labels:
    app: regula-docreader

spec:
  replicas: 2
  selector:
    matchLabels:
      app: regula-docreader
  template:
    metadata:
      labels:
        app: regula-docreader
    spec:
      containers:
      - name: api
        image: regulaforensics/docreader:latest # Set requried version TAG here
        imagePullPolicy: Always
        env:
        ## General settings
        - name: DOCREADER_BIND
          value: "0.0.0.0:8080"                   ## Default value
        - name: DOCREADER_BACKLOG
          value: "20"                             ## Default value
        - name: DOCREADER_WORKERS
          value: "1"                              ## Default value
        - name: DOCREADER_LOG_LEVEL
          value: "info"                           ## Default value
        - name: DOCREADER_LOG_FILE
          value: "-"                              ## Default value
        - name: DOCREADER_ACCESS_LOG_FILE
          value: "-"                              ## Default value
        #- name: DOCREADER_LIC_URL
        #  value: "https://path/to/secure/storage/regula.license" ## I.e. secured S3
        - name: DOCREADER_ENABLE_DEMO_WEB_APP
          value: "true"                           ## Default value

        ## HTTPS.
        ## We recommend to terminate ssl traffic at the Ingress
        #- name: DOCREADER_CERT_FILE
        #  value: "/path/to/your/crt/file"
        #- name: DOCREADER_KEY_FILE
        #  value: "/path/to/your/key/file"

        ## CORS
        - name: DOCREADER_CORS_ORIGINS
          value: "*"                                            ## Default value
        - name: DOCREADER_CORS_METHODS
          value: "*"                                            ## Default value
        - name: DOCREADER_CORS_HEADERS
          value: "GET, HEAD, POST, OPTIONS, PUT, PATCH, DELETE" ## Default value

        ## LOGS. Uncomment if you require to save processed results
        #- name: DOCREADER_PROCESS_RESULTS_LOG_PATH
        #  value: "/app/logs"

        ## Resources and Limits. Each worker requires 1 cpu/2Gb memory, this SumCPU = Nworkers * 1 cpu; SumMemory = Nworkers * 2Gb
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /api/ping
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: license
          mountPath: /app/extBin/unix_x64/regula.license
          subPath: regula.license
      ## LOGS. Uncomment if you require to save processed results
      #  - name: logs
      #    mountPath: /app/logs
      ## LOGS. Uncomment if you require to save processed results
      ##initContainers:
      #- name: init-logs
      #  image: busybox:1.33
      #  command: ['sh', '-c', 'chmod g+wx /app/logs', 'chgrp root /app/logs' ]
      #  volumeMounts:
      #  - name: logs
      #    mountPath: /app/logs
      volumes:
      - name: license
        secret:
          secretName: license
      ## LOGS. Uncomment and change volume type if you require to save processed results
      #- name: logs
      #  emptyDir: {}
---
## Prerequisits - Metrics Server https://kubernetes.io/docs/tasks/debug-application-cluster/resource-metrics-pipeline/#metrics-server
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: regula
  name: regula-docreader
  labels:
    app: regula-docreader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: regula-docreader
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 150

---
apiVersion: v1
kind: Service
metadata:
  name: regula-docreader
  namespace: regula
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: regula-docreader
  type: ClusterIP
